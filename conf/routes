# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

GET     /song/:id                        controllers.SongController.get(id: model.SongId)
PUT     /song/:id                        controllers.SongController.put(id: model.SongId)
DELETE  /song/:id                        controllers.SongController.delete(id: model.SongId)
POST    /song                            controllers.SongController.post()

GET     /artist/:id                      controllers.ArtistController.get(id: model.ArtistId)
GET     /artist/musicbrainz/:id          controllers.ArtistController.getByMusicbrainzId(id: String)
PUT     /artist/:id                      controllers.ArtistController.put(id: model.ArtistId)
DELETE  /artist/:id                      controllers.ArtistController.delete(id: model.ArtistId)
POST    /artist                          controllers.ArtistController.post()

GET     /album/:id                       controllers.AlbumController.get(id: model.AlbumId)
GET     /album/musicbrainz/:id           controllers.AlbumController.getByMusicbrainzId(id: String)
PUT     /album/:id                       controllers.AlbumController.put(id: model.AlbumId)
DELETE  /album/:id                       controllers.AlbumController.delete(id: model.AlbumId)
POST    /album                           controllers.AlbumController.post()

GET     /core-data                       controllers.CoreDataController.get()

GET     /ws/current-list                 controllers.CurrentListController.ws()

POST    /contact                         controllers.ContactController.post()

POST    /comment                         controllers.CommentController.post()
GET     /comments/count                  controllers.CommentController.count()
GET     /comments/deleted                controllers.CommentController.listDeleted()
GET     /comments/:page                  controllers.CommentController.listPage(page: Int)
DELETE  /comment/:id                     controllers.CommentController.delete(id: model.CommentId)
PUT     /comment/:id                     controllers.CommentController.update(id: model.CommentId)
POST    /comment/:id                     controllers.CommentController.restore(id: model.CommentId)

GET     /ws/chat                         controllers.ChatController.ws()
GET     /chat/ticket                     controllers.ChatController.ticket()

POST    /list-entry/:year/:position      controllers.ListEntryController.post(year: Int, position: Int)
DELETE  /list-entry/:year/:position      controllers.ListEntryController.delete(year: Int, position: Int)

POST    /list-exit/:year/:id             controllers.ListExitController.post(year: Int, id: model.SongId)
DELETE  /list-exit/:year/:id             controllers.ListExitController.delete(year: Int, id: model.SongId)
DELETE  /list-exit/:year                 controllers.ListExitController.deleteAll(year: Int)

GET     /user                            controllers.UserController.get()
POST    /user                            controllers.UserController.post()
POST    /user/display-name               controllers.UserController.setDisplayName()
GET     /user/list                       controllers.UserController.list()
POST    /user/:id/block                  controllers.UserController.block(id: String)
DELETE  /user/:id/block                  controllers.UserController.unblock(id: String)

GET     /cache/invalidate                controllers.CacheController.invalidate()

GET     /spotify/find                    controllers.SpotifyController.find(query: String)
GET     /spotify/crawl-artists           controllers.SpotifyController.crawlArtistsFromSongs()

GET     /wikidata/crawl-artists-spotify  controllers.WikidataController.crawlArtistsFromSpotify()
GET     /wikidata/crawl-artist-details   controllers.WikidataController.crawlArtistDetails()
GET     /wikidata/crawl-album-details    controllers.WikidataController.crawlAlbumDetails()
GET     /wikidata/crawl-song-details     controllers.WikidataController.crawlSongDetails()

GET     /wikipedia/find                  controllers.WikipediaController.find(url: String)
GET     /wikipedia/reload                controllers.WikipediaController.reload(url: String)
GET     /wikipedia/crawl                 controllers.WikipediaController.crawl()

GET     /musicbrainz/crawl-artist-details  controllers.MusicbrainzController.crawlArtistDetails()
GET     /musicbrainz/crawl-album-details   controllers.MusicbrainzController.crawlAlbumDetails()
GET     /musicbrainz/crawl-song-details    controllers.MusicbrainzController.crawlSongDetails()
GET     /musicbrainz/crawl-albums          controllers.MusicbrainzController.crawlAlbums()
GET     /musicbrainz/find                  controllers.MusicbrainzController.find()
GET     /coverartarchive/crawl-albums      controllers.CoverArtArchiveController.crawlAlbums()

GET     /mbdata/search                   controllers.MBDataController.search(artist: String, title: String)
GET     /mbdata/search-query             controllers.MBDataController.searchQuery(query: String)
GET     /mbdata/crawl-songs              controllers.MBDataController.crawlSongs()

GET     /crawl-artist                    controllers.CrawlArtistController.getFirstPending()
POST    /crawl-artist/:id                controllers.CrawlArtistController.accept(id: model.CrawlArtistId)
DELETE  /crawl-artist/:id                controllers.CrawlArtistController.reject(id: model.CrawlArtistId)
GET     /crawl-album                     controllers.CrawlAlbumController.getFirstPending()
POST    /crawl-album/:id                 controllers.CrawlAlbumController.accept(id: model.CrawlAlbumId)
DELETE  /crawl-album/:id                 controllers.CrawlAlbumController.reject(id: model.CrawlAlbumId)
GET     /crawl-song                      controllers.CrawlSongController.getFirstPending()
POST    /crawl-song/:id                  controllers.CrawlSongController.accept(id: model.CrawlSongId)
DELETE  /crawl-song/:id                  controllers.CrawlSongController.reject(id: model.CrawlSongId)

POST    /poll                            controllers.PollController.createPoll()
GET     /poll/list                       controllers.PollController.list()
GET     /poll/my-votes                   controllers.PollController.myVotes()
GET     /poll/latest                     controllers.PollController.getLatest()
PUT     /poll/:pollId                    controllers.PollController.updatePoll(pollId: model.PollId)
POST    /poll/:pollId/hide               controllers.PollController.hidePoll(pollId: model.PollId)
DELETE  /poll/:pollId/hide               controllers.PollController.showPoll(pollId: model.PollId)
PUT     /poll/:pollId/:pollAnswerId      controllers.PollController.updatePollAnswer(pollId: model.PollId, pollAnswerId: model.PollAnswerId)
GET     /poll/:pollId                    controllers.PollController.get(pollId: model.PollId)
POST    /poll/:pollId/:pollAnswerId      controllers.PollController.vote(pollId: model.PollId, pollAnswerId: model.PollAnswerId)

GET     /text/:key                       controllers.TextController.get(key: String)
POST    /text/:key                       controllers.TextController.save(key: String)

POST    /year/:year                      controllers.YearController.post(year: Int)
DELETE  /year/:year                      controllers.YearController.delete(year: Int)
